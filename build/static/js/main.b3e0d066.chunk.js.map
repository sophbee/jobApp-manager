{"version":3,"sources":["images/snag-logo-white.svg","components/Application/Application.js","components/ApplicationList/ApplicationList.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Application","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","isNotSaved","handleClick","bind","assertThisInitialized","setState","prevState","_this2","react_default","a","createElement","className","Card_default","Header","onClick","aria-controls","aria-expanded","name","Collapse_default","in","id","Body","Text","Row_default","Col_default","Table_default","bordered","hover","responsive","position","experience","applied","questions","striped","M","T","W","Th","F","S","Su","Button_default","variant","handleSaved","Component","ApplicationList","filteredApplicants","savedApplicants","isSaved","handleChange","applicants","nextProps","e","newList","target","value","filter","applicant","applicantLowerCase","toLowerCase","filtered","includes","Container_default","Form_default","FormControl_default","type","size","placeholder","onChange","sort","z","aName","zName","map","index","components_Application_Application","key","availability","Navbar_default","Brand","style","height","src","image","alt","weight","App","allApplicants","applications","console","log","components_Header_Header","components_ApplicationList_ApplicationList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b3e0d066.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snag-logo-white.fa98c7a1.svg\";","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from 'react-bootstrap/Button'\n\nclass Application extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        //states to control opening and closing cards with applicant information and to toggle between saved and save for later messages on button\n        this.state = {\n            open: false,\n            isNotSaved: true\n        };\n        //binding to make this work in callback\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    //function to toggle button text\n    handleClick() {\n        this.setState(function(prevState) {\n            return {isNotSaved: !prevState.isNotSaved};\n        });\n    }\n\n    render() {\n        const { open } = this.state;\n        return (\n            <div className='application-card'>\n                <Card className='text-center'>\n                    <Card.Header\n                        onClick={() => this.setState({ open: !open })}\n                        aria-controls='collapse-text'\n                        aria-expanded={open}>\n                        {this.props.name}                       \n                    </Card.Header>\n                    <Collapse in={this.state.open}>\n                        <div id='collapse-text'>\n                            <Card.Body>\n                                <Card.Text>\n                                    <Row>\n                                        <Col>\n                                            <Table bordered hover responsive='sm'>\n                                                <thead>\n                                                    <tr>\n                                                        <th>ID</th>\n                                                        <th>Position</th>\n                                                        <th>Experience</th>\n                                                        <th>Applied</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr>\n                                                        <td>{this.props.id}</td>\n                                                        <td>{this.props.position}</td>\n                                                        <td>{this.props.experience}</td>\n                                                        <td>{this.props.applied}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                        <Col>\n                                            <Table bordered hover responsive='sm'>\n                                                <thead>\n                                                    <tr>\n                                                        <th>Question</th>\n                                                        <th>Answer</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr>\n                                                        <td>{this.props.questions[0][\"text\"]}</td>\n                                                        <td>{this.props.questions[0][\"answer\"]}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h5><strong>Shift Availability</strong></h5>\n                                            <Table striped bordered hover responsive='sm'>\n                                                <thead>\n                                                    <tr>\n                                                        <th>Day</th>\n                                                        <th>Shift</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr>\n                                                        <td>Monday</td>\n                                                        <td>{this.props.M}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Tuesday</td>\n                                                        <td>{this.props.T}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Wednesday</td>\n                                                        <td>{this.props.W}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Thursday</td>\n                                                        <td>{this.props.Th}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Friday</td>\n                                                        <td>{this.props.F}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Saturday</td>\n                                                        <td>{this.props.S}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td>Sunday</td>\n                                                        <td>{this.props.Su}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </Card.Text>\n                                <Button variant='primary' onClick={this.props.handleSaved}>{this.state.isNotSaved ? 'Save for Later' : 'Saved'}</Button>\n                            </Card.Body>\n                        </div>\n                    </Collapse>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Application;\n","import React, { Component } from 'react';\nimport Application from '../Application/Application';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass ApplicationList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filteredApplicants: [],\n            savedApplicants: [],\n            isSaved: true\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSaved = this.handleSaved.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            filteredApplicants: this.props.applicants,\n            savedApplicants: this.props.applicants\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            filteredApplicants: nextProps.applicants,\n            savedApplicants: nextProps.applicants\n        });\n    }\n\n    //function to handle saved applicants for viewing later\n    // handleSaved() {\n    //     this.setState({\n    //         isSaved: true\n    //     });\n    //     if(this.setState === true) {\n    //         return savedApplicants;\n    //     } else {\n    //         return filteredApplicants;\n    //     }\n    // }\n\n    handleChange(e) {\n        //hold the original version of the list\n        let currentList = [];\n        // hold the filtered list before putting into state\n        let newList = [];\n\n        //if search bar isn't empty\n        if (e.target.value !== \"\") {\n            //assign all applicants to currentList\n            currentList = this.props.applicants;\n\n            //.filter() to show searched applicants\n            newList = currentList.filter(applicant => {\n                //change applicant name to lowercase\n                const applicantLowerCase = applicant.name.toLowerCase();\n                //change search term to lowercase\n                const filtered = e.target.value.toLowerCase();\n                //check to see if the current list item includes the search term; if so, add to newList\n                return applicantLowerCase.includes(filtered);\n            });\n        } else {\n            // if search is empty, newList to currentList\n            newList = this.props.applicants;\n        }\n        //set filtered state based newList\n        this.setState({\n            filteredApplicants: newList\n        });\n    }\n\n    render() {\n        //sorting names in ABC order before mapping out to client side\n        return (\n            <div className='applicationList-panel'>\n            <Container>\n                <Form>\n                    <FormControl \n                        type=\"text\"\n                        size=\"lg\"\n                        placeholder=\"Search Applicants\" \n                        className=\"mr-sm-2\"\n                        onChange={this.handleChange}\n                    />\n                </Form>\n             \n                {this.state.filteredApplicants\n                    .sort(function(a, z) {\n                        let aName = a.name.toLowerCase();\n                        let zName = z.name.toLowerCase();\n                        return (aName < zName) ? -1 : (aName > zName) ? 1 : 0;\n                    })\n                    .map((applicant, index) => (\n                    <Application\n                        key={index}\n                        id={applicant.id}\n                        name={applicant.name}\n                        position={applicant.position}\n                        applied={applicant.applied}\n                        experience={applicant.experience}\n                        M={applicant.availability.M}\n                        T={applicant.availability.T}\n                        W={applicant.availability.W}\n                        Th={applicant.availability.Th}\n                        F={applicant.availability.F}\n                        S={applicant.availability.S}\n                        Su={applicant.availability.Su}\n                        questions={applicant.questions}\n                    />\n                ))}\n                <Button variant='primary' onClick={this.handleSaved}>Show Saved Applicants</Button>\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default ApplicationList;","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport './Header.css';\nimport image from '../../images/snag-logo-white.svg'\n\nclass Header extends Component {\n    render() {\n        return (\n            <Navbar className='gradient'>\n                <Navbar.Brand style={{ height: 105 }}>\n                    <img src={image} alt='Snag' style={{ height: 100, weight: 100 }} />\n                </Navbar.Brand>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ApplicationList from './components/ApplicationList/ApplicationList';\nimport Header from './components/Header/Header';\nimport applications from './data.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allApplicants: applications\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header />\n        <ApplicationList applicants={this.state.allApplicants} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}